@startuml

!if (MODE_DARK == "true")
  skinparam backgroundColor #000000
  skinparam defaultFontColor #ffffff
  skinparam titleFontColor #ffffff
  skinparam componentFontColor #ffffff
  skinparam nodeFontColor #ffffff
  skinparam databaseFontColor #ffffff
  skinparam arrowColor #ffffff
  skinparam ArrowFontColor #ffffff

  skinparam componentBackgroundColor #2d2d2d
  skinparam nodeBackgroundColor #2d2d2d
  skinparam databaseBackgroundColor #2d2d2d
  skinparam packageBackgroundColor #2d2d2d
  skinparam cloudBackgroundColor #2d2d2d

  skinparam componentBorderColor #ffffff
  skinparam nodeBorderColor #ffffff
  skinparam databaseBorderColor #ffffff
  skinparam packageBorderColor #ffffff
  skinparam cloudBorderColor #ffffff
  skinparam rectangleBorderColor #ffffff
!else
  skinparam backgroundColor #ffffff
  skinparam defaultFontColor #000000
  skinparam titleFontColor #000000
  skinparam componentFontColor #000000
  skinparam nodeFontColor #000000
  skinparam databaseFontColor #000000
  skinparam arrowColor #000000
  skinparam ArrowFontColor #000000

  skinparam componentBackgroundColor #f0f0f0
  skinparam nodeBackgroundColor #f0f0f0
  skinparam databaseBackgroundColor #f0f0f0
  skinparam packageBackgroundColor #f0f0f0
  skinparam cloudBackgroundColor #f0f0f0

  skinparam componentBorderColor #000000
  skinparam nodeBorderColor #000000
  skinparam databaseBorderColor #000000
  skinparam packageBorderColor #000000
  skinparam cloudBorderColor #000000
  skinparam rectangleBorderColor #000000
!endif

skinparam componentStyle rectangle
skinparam defaultFontName Monospace
skinparam ArrowFontSize 11

title OmniOpt2 Architecture

package "User Interface" {
  node "User" {
    component "Web GUI\n(optional)" as GUI
  }
}

component "CLI Command\nomniopt ..." as CLI

package "OmniOpt2 Workflow" {


  GUI ..> CLI : Generates CLI Command to be executed

  database "OmniOpt2 Server\n(optional, Live-Share)" as OmniOpt2Server

  package "Local Mode" {
	  database "runs/ (local)" as LocalRuns

	  node "Local System" {
		  component "OmniOpt2 Core\n(main script)" as LocalCore
			  component "Job #1" as LocalJobs1
			  component "Job #2" as LocalJobs2
			  component "Job #n" as LocalJobsN
	  }

	  CLI --> LocalCore : Run locally

		  LocalCore --> LocalJobs1 : start job 1
		  LocalJobs1 --> LocalCore : return results

		  LocalCore --> LocalJobs2 : start job 2
		  LocalJobs2 --> LocalCore : return results

		  LocalCore --> LocalJobsN : start job n
		  LocalJobsN --> LocalCore : return results

		  LocalCore --> LocalRuns : write all results

		  LocalCore ..> OmniOpt2Server : --live_share (optional)
  }

  package "HPC Mode (via submitit/sbatch)" {

    cloud "HPC" {

      node "Login Node\n(sbatch only)" as LoginNode

      node "Head Node" {
        component "OmniOpt2 Core\n(main script)" as HPCMaster
      }

      node "Compute Node 1" {
        component "Job #1" as Job1
      }

      node "Compute Node 2" {
        component "Job #2" as Job2
      }

      node "Compute Node n" {
        component "Job #n" as Job3
      }
    }

    database "runs/ (on file system)" as HPCRuns

    CLI --> LoginNode : ssh login
    LoginNode --> HPCMaster : sbatch command

    HPCMaster --> Job1 : submit
    HPCMaster --> Job2 : submit
    HPCMaster --> Job3 : submit

    Job1 -down-> HPCMaster : return results
    Job2 -down-> HPCMaster : return results
    Job3 -down-> HPCMaster : return results

    HPCMaster --> HPCRuns : write results
    HPCMaster ..> OmniOpt2Server : --live_share (optional)
  }
}

@enduml
