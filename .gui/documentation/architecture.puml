@startuml

actor User

' === Konfigurierbares Theme ===
!if (MODE_DARK == "true")
  skinparam backgroundColor #000000
  skinparam defaultFontColor #ffffff
  skinparam componentFontColor #ffffff
  skinparam nodeFontColor #ffffff
  skinparam databaseFontColor #ffffff
  skinparam arrowColor #ffffff
  skinparam ArrowFontColor #ffffff

  skinparam componentBackgroundColor #1e1e1e
  skinparam nodeBackgroundColor #CC7000
  skinparam databaseBackgroundColor #003366
  skinparam packageBackgroundColor #1e1e1e
  skinparam cloudBackgroundColor #1e1e1e

  skinparam componentBorderColor #ffffff
  skinparam nodeBorderColor #ffffff
  skinparam databaseBorderColor #ffffff
  skinparam packageBorderColor #ffffff
  skinparam cloudBorderColor #ffffff
  skinparam rectangleBorderColor #ffffff
!else
  skinparam backgroundColor #ffffff
  skinparam defaultFontColor #000000
  skinparam componentFontColor #000000
  skinparam nodeFontColor #000000
  skinparam databaseFontColor #000000
  skinparam arrowColor #000000
  skinparam ArrowFontColor #000000

  skinparam componentBackgroundColor #e0e0e0
  skinparam nodeBackgroundColor #FFB84D
  skinparam databaseBackgroundColor #FFEB3B
  skinparam packageBackgroundColor #e0e0e0
  skinparam cloudBackgroundColor #e0e0e0

  skinparam componentBorderColor #000000
  skinparam nodeBorderColor #000000
  skinparam databaseBorderColor #000000
  skinparam packageBorderColor #000000
  skinparam cloudBorderColor #000000
  skinparam rectangleBorderColor #000000
!endif

skinparam componentStyle rectangle
skinparam defaultFontName Monospace
skinparam ArrowFontSize 11

title OmniOpt2 Architecture

' === BenutzeroberflÃ¤che ===
package "User Interface" {
  component "Web GUI\n(optional)" as GUI #line.dashed
  database "OmniOpt2 Share" as Share #line.dashed
}

component "CLI Command\nomniopt ..." as CLI

GUI ..> CLI : Generates CLI command
User --> GUI

' === Lokaler Modus ===
package "Local Mode" {
  database "runs/ (local)" as LocalRuns

  node "Local System" {
    component "OmniOpt2 main script" as LocalCore

    component "Job #1" as LocalJob1 #FF8C00
    component "Job #2" as LocalJob2 #FF8C00
    component "Job #n" as LocalJobN #FF8C00
  }

  CLI --> LocalCore : run locally

  LocalCore --> LocalJob1 : start
  LocalJob1 --> LocalCore : result

  LocalCore --> LocalJob2 : start
  LocalJob2 --> LocalCore : result

  LocalCore --> LocalJobN : start
  LocalJobN --> LocalCore : result

  LocalCore --> LocalRuns : write all results
  LocalRuns ..> Share : --live_share
}

' === HPC Modus ===
package "HPC Mode (via submitit/sbatch)" {
  cloud "HPC Cluster" {

    node "Login Node\n(sbatch only)" as LoginNode
    node "Head Node" {
      component "OmniOpt2 main script" as HPCMaster
    }
    node "Compute Node 1" {
      component "Job #1" as HPCJob1 #FF8C00
    }
    node "Compute Node 2" {
      component "Job #2" as HPCJob2 #FF8C00
    }
    node "Compute Node n" {
      component "Job #n" as HPCJobN #FF8C00
    }
  }

  database "runs/ (HPC filesystem)" as HPCRuns

  CLI --> LoginNode : ssh login
  LoginNode --> HPCMaster : sbatch command

  HPCMaster --> HPCJob1 : submit
  HPCMaster --> HPCJob2 : submit
  HPCMaster --> HPCJobN : submit

  HPCJob1 --> HPCMaster : result
  HPCJob2 --> HPCMaster : result
  HPCJobN --> HPCMaster : result

  HPCMaster --> HPCRuns : write all results
  HPCRuns ..> Share : --live_share
}

@enduml
