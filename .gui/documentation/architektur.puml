@startuml
skinparam componentStyle rectangle
skinparam defaultFontName Monospace
skinparam ArrowFontSize 11

title OmniOpt Architecture

package "OmniOpt Workflow" {

  node "User" {
    component "Web GUI\n(optional)" as GUI
  }

  component "CLI Command\nomniopt ..." as CLI

  GUI ..> CLI : Generate command

  database "OmniOpt Server\n(optional live upload)" as OmniOptServer

  package "Local Mode" {
    node "Local System" {
      component "OmniOpt Core\n(main script)" as LocalCore
      component "Job #1" as LocalJobs1
      component "Job #2" as LocalJobs2
      component "Job #n" as LocalJobs3
      database "runs/ (local)" as LocalRuns
    }

    CLI --> LocalCore : Run
    LocalCore --> LocalJobs1
    LocalJobs1 --> LocalJobs2
    LocalJobs2 --> LocalJobs3
    LocalJobs3 --> LocalRuns : write results
    LocalCore --> OmniOptServer : --live_share (optional)
  }

  package "HPC Mode (via submitit/sbatch)" {

    cloud "HPC" {

      node "Login Node\n(sbatch only)" as LoginNode

      node "Head Node" {
        component "OmniOpt Core\n(main script)" as HPCMaster
      }

      node "Compute Node 1" {
        component "Job #1" as Job1
      }

      node "Compute Node 2" {
        component "Job #2" as Job2
      }

      node "Compute Node n" {
        component "Job #n" as Job3
      }
    }

    database "runs/ (on file system)" as HPCRuns

    CLI --> LoginNode : ssh login
    LoginNode --> HPCMaster : sbatch command

    HPCMaster --> Job1 : submit
    HPCMaster --> Job2 : submit
    HPCMaster --> Job3 : submit

    Job1 -down-> HPCMaster : return results
    Job2 -down-> HPCMaster : return results
    Job3 -down-> HPCMaster : return results

    HPCMaster --> HPCRuns : write results
    HPCMaster --> OmniOptServer : --live_share (optional)
  }
}

@enduml
