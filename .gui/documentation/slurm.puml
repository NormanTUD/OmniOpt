@startuml

' === Configurable Theme ===
!if (MODE_DARK == "true")
  skinparam backgroundColor #000000
  skinparam defaultFontColor #ffffff
  skinparam componentFontColor #ffffff
  skinparam nodeFontColor #ffffff
  skinparam databaseFontColor #ffffff
  skinparam arrowColor #ffffff
  skinparam ArrowFontColor #ffffff

  skinparam componentBackgroundColor #1e1e1e
  skinparam nodeBackgroundColor #CC7000
  skinparam databaseBackgroundColor #003166
  skinparam packageBackgroundColor #1e1e1e
  skinparam cloudBackgroundColor #1e1e1e

  skinparam componentBorderColor #ffffff
  skinparam nodeBorderColor #ffffff
  skinparam databaseBorderColor #ffffff
  skinparam packageBorderColor #ffffff
  skinparam cloudBorderColor #ffffff
  skinparam rectangleBorderColor #ffffff
!else
  skinparam backgroundColor #ffffff
  skinparam defaultFontColor #000000
  skinparam componentFontColor #000000
  skinparam nodeFontColor #000000
  skinparam databaseFontColor #000000
  skinparam arrowColor #000000
  skinparam ArrowFontColor #000000

  skinparam componentBackgroundColor #e0e0e0
  skinparam nodeBackgroundColor #FFB84D
  skinparam databaseBackgroundColor #003166
  skinparam packageBackgroundColor #e0e0e0
  skinparam cloudBackgroundColor #e0e0e0

  skinparam componentBorderColor #000000
  skinparam nodeBorderColor #000000
  skinparam databaseBorderColor #000000
  skinparam packageBorderColor #000000
  skinparam cloudBorderColor #000000
  skinparam rectangleBorderColor #000000
!endif

skinparam componentStyle rectangle
skinparam defaultFontName Monospace
skinparam ArrowFontSize 11

title Interaction between OmniOpt, sbatch, ax, BoTorch Module, and ExternalGenerationNodes

node "HPC Master Node" as HPCMaster {
  component "OmniOpt2 Core" as OmniOptCore
  component "ax" as ax_module #LightBlue

  package "BoTorch Module" {
    component "Sobol Sequence Generator" as sobol #LightGreen
    component "BoTorch Optimizer" as botorch

    component "BOTORCH_MODULAR\n..." as modular #99FF99
    component "GPEI\n..." as gpei #99FF99
    component "SAASBO\n..." as saasbo #99FF99

    botorch -down-> modular
    botorch -down-> gpei
    botorch -down-> saasbo
  }

  component "ExternalGenerationNodes" as external_nodes
  component "RandomForest" as rf_nodes #LightBlue

  database "runs/" as db_runs
}

node "Compute Nodes" as ComputeNodes {
  component "Job #1" as Job1 #FF8C00
  component "Job #2" as Job2 #FF8C00
  component "Job #n" as JobN #FF8C00
}

OmniOptCore --> ax_module : invoke with search space

ax_module --> sobol : generate initial points (default)
sobol --> ax_module : initial points

ax_module --> botorch : generate points\n(using current points)
ax_module --> external_nodes : generate points\n(using current points)
ax_module --> rf_nodes : generate points\n(using current points)

botorch --> ax_module : new points
external_nodes --> ax_module : new points
rf_nodes --> ax_module : new points

ax_module --> OmniOptCore : all generated points

OmniOptCore --> Job1 : submit job
OmniOptCore --> Job2 : submit job
OmniOptCore --> JobN : submit job

Job1 --> OmniOptCore : results
Job2 --> OmniOptCore : results
JobN --> OmniOptCore : results

OmniOptCore --> ax_module : forward results

OmniOptCore --> db_runs : log runs and results

@enduml
