#!/usr/bin/env bash

if [[ -n $RUN_WITH_COVERAGE ]]; then
	if command -v coverage 2>/dev/null >/dev/null; then
		coverage combine -i 2>/dev/null >/dev/null || true
		coverage xml -i 2>/dev/null >/dev/null || true
		coverage json -i 2>/dev/null >/dev/null || true
		coverage html -i 2>/dev/null >/dev/null || true

		coverage report -i || true

		if [[ -n $GITHUB_STEP_SUMMARY ]]; then
			echo "$(coverage report --format=markdown || true)" >> "$GITHUB_STEP_SUMMARY"
		fi

		if [[ -z $CI ]] && [[ -n $DISPLAY ]] && command -v firefox 2>/dev/null >/dev/null; then
			if [[ -e htmlcov/index.html ]]; then
				firefox htmlcov/index.html || true
			else
				red_text "htmlcov/index.html not found\n"
			fi
		fi
	else
		red_text "--run_with_coverage was defined, but coverage could not be found\n"
	fi
fi

unset_debug

IFS=',' read -r -a headers <<< "${LOG_TIMES[0]}"

declare -A max_lengths
for header in "${headers[@]}"; do
	max_lengths["$header"]=0
done

for entry in "${LOG_TIMES[@]}"; do                     
	IFS=',' read -r -a fields <<< "$entry"                   
	for i in "${!fields[@]}"; do    
		header="${headers[$i]}"
		if [[ -z "${headers[$i]}" ]]; then
			red_text "Error: No header for index $i found"
		else
			max_lengths["$header"]=${max_lengths["$header"]:-0}
			[[ ${#fields[$i]} -gt ${max_lengths["$header"]} ]] && max_lengths["$header"]=${#fields[$i]}
		fi
	done          
done
