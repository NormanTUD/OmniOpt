#!/usr/bin/env bash

# HELPPAGE: Find GUI options that are not in OmniOpt2 or vice versa, so they always reflect each other.

function echoerr() {
	echo "$@" 1>&2
}

function yellow_text {
	echoerr -e "\e\033[0;33m$1\e[0m"
}

function red_text {
	echoerr -e "\e[31m$1\e[0m"
}

function green_text {
	echoerr -e "\e\033[0;32m$1\e[0m"
}

if command -v php 2>/dev/null >/dev/null; then
	SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

	cd "$SCRIPT_DIR"

	cd ..

	gui_options="$(cat .gui/gui_data.js | grep "id:" | sed -e 's#.*:##' -e 's#",##' -e 's#"##' -e 's#^\s*##')"

	cd .gui
	help_options="$(php _tutorials/help.php | grep "<pre class='invert_in_dark_mode'><code class='language-bash'>--" | sed -e 's#.*>--##' -e 's#</.*##')"
	cd ..

	errors=0

	declare -a gui_exceptions=(
		constraints
		installation_method
		PSEUDORANDOM
		BOTORCH_MODULAR
		SAASBO
		UNIFORM
		SOBOL
		FACTORIAL
		EXTERNAL_GENERATOR
		RANDOMFOREST
		BO_MIXED
		TPE
		worker_generator_path
	)

	declare -a help_exceptions=(
		raise_in_eval
		config_yaml
		config_json
		skip_search
		range_max_difference
		db_url
		config_toml
		show_generation_and_submission_sixel
		run_tests_that_fail_on_taurus
		calculate_pareto_front_of_job
		tests
		prettyprint
		just_return_defaults
		share_password
		parameter
		continue_previous_job
		transforms
		debug_stack_regex
		num_cpus_main_job
		orchestrator_file
		disable_previous_job_constraint
		ui_url
		load_data_from_existing_jobs
		run_dir
		signed_weighted_euclidean_weights
		experiment_constraints
		minkowski_p
		max_parallelism
		show_ram_every_n_seconds
		runtime_debug
		show_func_name
		worker_generator_path
	)

	for gui_option in $gui_options; do
		gui_option=$(echo "$gui_option" | sed -e "s#[',]##g")
		if printf '%s\n' "${help_options[@]}" | grep -qx "$gui_option" || printf '%s\n' "${gui_exceptions[@]}" | grep -qx "$gui_option"; then
			true
		else
			red_text "GUI option $gui_option is not in the --help"
			errors=$((errors+1))
		fi
	done

	for help_option in $help_options; do
		if printf '%s\n' "${gui_options[@]}" | grep -qx "$help_option" || printf '%s\n' "${help_exceptions[@]}" | grep -qx "$help_option"; then
			true
		else
			red_text "--help option $help_option is not in the GUI"
			errors=$((errors+1))
		fi
	done

	if [[ $errors -eq 0 ]]; then
		green_text "No errors"
		exit 0
	fi

	red_text "$errors errors"
	exit $errors
else
	green_text "PHP not installed. Will skip all_oo_options_are_in_gui_and_vice_versa."
	exit 0
fi
