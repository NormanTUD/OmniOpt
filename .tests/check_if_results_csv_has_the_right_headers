#!/usr/bin/env bash

function echoerr {
	echo "$@" 1>&2
}

function yellow_text {
	echoerr -e "\033[0;33m$1\033[0m"
}

function green_text {
	echoerr -e "\033[0;32m$1\033[0m"
}

function red_text {
	echoerr -e "\033[0;31m$1\033[0m"
}

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
cd "$SCRIPT_DIR"
cd ..

RUN_DIR="runs/__main__tests__BOTORCH_MODULAR___nogridsearch/0"

if [[ -d $RUN_DIR ]]; then
	rm -rf "$RUN_DIR"
fi

NUM_GPUS=0

if command -v nvidia-smi 2>/dev/null >/dev/null; then
	NUM_GPUS=1
fi

# Run the required command
.tests/start_simple_optimization_run --num_parallel_jobs=1 --gpus=$NUM_GPUS --num_random_steps=1 --max_eval=1 --mem_gb=4 --generate_all_jobs_at_once --random_sem --nr_results=1 --follow

# File to check
CSV_FILE="$RUN_DIR/results.csv"

# Required columns (as array)
required_columns=(
	"trial_index"
	"arm_name"
	"trial_status"
	"generation_node"
	"RESULT"
	"int_param"
	"float_param"
	"int_param_two"
	"choice_param"
)

# Read header (first line) and convert to array
if [[ ! -f "$CSV_FILE" ]]; then
	red_text "CSV file not found: $CSV_FILE"
	exit 1
fi

header=$(head -n 1 "$CSV_FILE")
IFS=',' read -r -a header_columns <<< "$header"

# Check for missing columns
missing=()
for col in "${required_columns[@]}"; do
	found=false
	for existing in "${header_columns[@]}"; do
		if [[ "$existing" == "$col" ]]; then
			found=true
			break
		fi
	done
	if ! $found; then
		missing+=("$col")
	fi
done

# Report result
if [ ${#missing[@]} -eq 0 ]; then
	green_text "All required columns are present in the CSV header."
	exit 0
else
	for miss in "${missing[@]}"; do
		red_text "Missing column: $miss"
	done

	echo "CSV-file: $CSV_FILE"

	echo "================================================="
	cat "$CSV_FILE"
	echo "================================================="

	exit 1
fi
