#!/usr/bin/env bash

if [[ -d runs/randomforest ]]; then
	rm -rf runs/randomforest
fi

./omniopt --partition=alpha --experiment_name=randomforest --mem_gb=1 --time=60 --worker_timeout=60 --max_eval=2 --num_parallel_jobs=1 --gpus=1 --num_random_steps=1 --follow --live_share --send_anonymized_usage_stats --result_names RESULT=min --run_program='ZWNobyAiUkVTVUxUOiAlYSUoeCklKHkpJXoi' --cpus_per_task=1 --nodes_per_job=1 --generate_all_jobs_at_once --revert_to_random_when_seemingly_exhausted --model=RANDOMFOREST --run_mode=local --decimalrounding=4 --occ_type=euclid --main_process_gb=8 --max_nr_of_zero_results=1 --pareto_front_confidence=1 --slurm_signal_delay_s=0 --n_estimators_randomforest=100 --parameter x fixed 123 --parameter y range 5431 1234 int false --parameter z range 0 1 float false --parameter a choice 1,2,3

exit_code=$?

if [[ $exit_code -ne 0 ]]; then
	echo "Test randomforest failed: OmniOpt2 exited with $exit_code instead of 0"
	exit 1
fi

csv="runs/randomforest/0/results.csv"

if [[ ! -e $csv ]]; then
	echo "Test randomforest failed: $csv could not be found"
	exit 2
fi

nr_lines_in_csv=$(cat $csv | wc -l)

if [[ $nr_lines_in_csv -ne 3 ]]; then
	echo "The file $csv does not contain 3, but $nr_lines_in_csv lines:"
	cat $csv
	exit 3
fi

keywords=("trial_index" "SOBOL" "RANDOMFOREST")

if ! mapfile -t lines < "$csv"; then
	echo "Error while reading the file $csv"
	exit 1
fi

if [[ ${#lines[@]} -ne ${#keywords[@]} ]]; then
	echo "The file '$csv' contains ${#lines[@]} lines, but ${#keywords[@]} were expected."
	exit 2
fi

declare -A keyword_found

for keyword in "${keywords[@]}"; do
	keyword_found["$keyword"]=0
done

for line in "${lines[@]}"; do
	found=0
	for keyword in "${keywords[@]}"; do
		if grep -qF "$keyword" <<< "$line"; then
			if [[ ${keyword_found[$keyword]} -ne 0 ]]; then
				echo "Keyword '$keyword' was found multiple times!"
				exit 3
			fi
			keyword_found["$keyword"]=1
			found=$((found + 1))
		fi
	done

	if [[ $found -ne 1 ]]; then
		echo "Line misses one of the following keywords: $line"
		exit 4
	fi
done

for keyword in "${keywords[@]}"; do
	if [[ ${keyword_found[$keyword]} -ne 1 ]]; then
		echo "Keyword '$keyword' was not found!"
		exit 5
	fi
done

echo "The file '$csv' contains exactly one keyword per line (${keywords[*]}), no duplicates, none missing. Everything seems fine."
exit 0
