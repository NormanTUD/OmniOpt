#!/usr/bin/env bash

# HELPPAGE: Tests that run very quickly and are annoying when the fail fast too late

export ONLY_CHECK_CHANGED_SINCE_LAST_COMMIT=1

tests=(
	find_missing_f_strings
	shellcheck
	find_functions_with_missing_types
	find_wrongly_typed_cli_args
	single_quotes_in_configloader
	find_untyped_cli_args
	find_unused_params
	unit_tests
	find_unused_share_functions
	all_oo_options_are_in_gui_and_vice_versa
	lizard
	doc_has_outdated_params
	find_undocumented_exit_codes
	find_wrong_order_definitions
	find_unused_params_in_plots
	find_functions_that_are_defined_multiple_times
	php_files
	check_state_file_documentation
	find_missing_toc_in_md_files
	find_double_function_names
	find_double_add_arguments_help
	find_add_arguments_with_double_quotes
	flake8
	deadcode
	bandit
	find_missing_env_vars_documentation
	state_files
	folder_structure
	find_double_function_thats_already_in_helper
	find_unused_functions_in_omniopt
	php_search
	missing_plot_metadata
	share_tests
	js_syntax
	pyright_fast
	find_typos
	mypy
)

code=1
total_start=$(date +%s)

declare -A runtimes

human_readable_time() {
    local secs=$1
    if (( secs < 60 )); then
        echo "${secs}s"
    elif (( secs < 3600 )); then
        printf "%dm %ds" $((secs/60)) $((secs%60))
    else
        printf "%dh %dm %ds" $((secs/3600)) $(((secs%3600)/60)) $((secs%60))
    fi
}

for t in "${tests[@]}"; do
    start=$(date +%s)
    printf "Running %-20s ... \n" "$t"

    if .tests/"$t"; then
        end=$(date +%s)
        runtime=$((end - start))
        runtimes["$t"]=$runtime
    else
        end=$(date +%s)
        runtime=$((end - start))
        printf "\033[31mFAIL\033[0m (%ds)\n" "$runtime"
        runtimes["$t"]=$runtime
        exit $code
    fi

    code=$((code+1))
done

total_end=$(date +%s)
total_runtime=$((total_end - total_start))

echo
echo "Smoke Tests OK in $(human_readable_time "$total_runtime")"
echo

# Find longest test name for column width
maxlen=0
for t in "${tests[@]}"; do
    (( ${#t} > maxlen )) && maxlen=${#t}
done

# Print table header
printf "| %-*s | %-12s |\n" "$maxlen" "Test" "Runtime"
printf "|-%-*s-|-%-12s-|\n" "$maxlen" "$(printf '%.0s-' $(seq 1 $maxlen))" "------------"

# Print rows
for t in "${tests[@]}"; do
    runtime=${runtimes[$t]}
    printf "| %-*s | %-12s |\n" "$maxlen" "$t" "$(human_readable_time "$runtime")"
done

