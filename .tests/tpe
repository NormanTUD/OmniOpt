#!/usr/bin/env bash

# HELPPAGE: Test TPE

function echoerr {
	echo "$@" 1>&2
}

function yellow_text {
	echoerr -e "\033[0;33m$1\033[0m"
}

function green_text {
	echoerr -e "\033[0;32m$1\033[0m"
}

function red_text {
	echoerr -e "\033[0;31m$1\033[0m"
}

function help {
	echo "Usage: $0 [OPTIONS]"
	echo
	echo "Runs a test optimization with TPE using .tests/start_simple_optimization_run."
	echo
	echo "Options:"
	echo "  --max_eval=N              Maximum number of evaluations (default: 6)"
	echo "  --num_random_steps=N      Number of random steps before model (default: 1)"
	echo "  --num_parallel_jobs=N     Number of parallel jobs (default: 2)"
	echo "  --mem_gb=N                Memory in GB per job (default: 4)"
	echo "  --testname=NAME           Name for the test run (default: TPE)"
	echo "  --gpus=0|1                Use GPU (default: auto-detect)"
	echo "  --additional=ARGS         Additional parameters for the optimizer"
	echo "  --help                    Show this help message"
	exit 0
}

# Default values
MAX_EVAL=6
NUM_RANDOM_STEPS=1
NUM_PARALLEL_JOBS=2
MEM_GB=4
TESTNAME="TPE"
ADDITIONAL_PARAMETER=""
AUTO_GPUS=true
NUM_GPUS=0

# Parse arguments
while [[ $# -gt 0 ]]; do
	case "$1" in
		--max_eval=*)
			MAX_EVAL="${1#*=}"
			shift
			;;
		--num_random_steps=*)
			NUM_RANDOM_STEPS="${1#*=}"
			shift
			;;
		--num_parallel_jobs=*)
			NUM_PARALLEL_JOBS="${1#*=}"
			shift
			;;
		--mem_gb=*)
			MEM_GB="${1#*=}"
			shift
			;;
		--testname=*)
			TESTNAME="${1#*=}"
			shift
			;;
		--gpus=*)
			NUM_GPUS="${1#*=}"
			AUTO_GPUS=false
			shift
			;;
		--additional=*)
			ADDITIONAL_PARAMETER="${1#*=}"
			shift
			;;
		--help|-h)
			help
			;;
		*)
			red_text "Unknown option: $1"
			help
			;;
	esac
done

# Auto-detect GPU if not specified
if $AUTO_GPUS && command -v nvidia-smi >/dev/null 2>&1; then
	NUM_GPUS=1
fi

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
cd "$SCRIPT_DIR/.."

rundir="runs/$TESTNAME"
csv_path="$rundir/0/results.csv"

if [[ -d "$rundir" ]]; then
	rm -rf "$rundir"
fi

.tests/start_simple_optimization_run \
	--two_params \
	--max_eval="$MAX_EVAL" \
	--num_parallel_jobs="$NUM_PARALLEL_JOBS" \
	--num_random_steps="$NUM_RANDOM_STEPS" \
	--mem_gb="$MEM_GB" \
	--generate_all_jobs_at_once \
	--follow \
	--additional_parameter="--model=TPE $ADDITIONAL_PARAMETER" \
	--testname="$TESTNAME" \
	--gpus="$NUM_GPUS"

exit_code=$?

if [[ $exit_code -ne 0 ]]; then
	red_text "TPE run failed with exit code $exit_code. Test failed."
	exit 1
fi

if [[ ! -e "$csv_path" ]]; then
	red_text "$csv_path could not be found."
	exit 2
fi

if [[ $(wc -l < "$csv_path") -ne $((NUM_RANDOM_STEPS + MAX_EVAL + 1)) ]]; then
	red_text "$csv_path does not contain $((NUM_RANDOM_STEPS + MAX_EVAL + 1)) lines of results:"
	cat "$csv_path"
	exit 3
fi

if ! tail -n1 "$csv_path" | grep -q TPE; then
	red_text "$csv_path: The last line does not contain TPE"
	cat "$csv_path"
	exit 4
fi

green_text "TPE test OK"
exit 0
