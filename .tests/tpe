#!/usr/bin/env bash

# HELPPAGE: Test TPE

function echoerr {
	echo "$@" 1>&2
}

function yellow_text {
	echoerr -e "\e\033[0;33m$1\e[0m"
}

function green_text {
	echoerr -e "\033[0;32m$1\e[0m"
}

function red_text {
	echoerr -e "\e[31m$1\e[0m"
}

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

cd $SCRIPT_DIR

cd ..

TESTNAME=TPE
rundir="runs/$TESTNAME"
csv_path=$rundir/0/results.csv
NUM_GPUS=0

if command -v nvidia-smi 2>/dev/null >/dev/null; then
	NUM_GPUS=1
fi

if [[ -d $rundir ]]; then
	rm -rf $rundir
fi

.tests/start_simple_optimization_run --two_params --max_eval=6 --num_parallel_jobs=2 --num_random_steps=1 --mem_gb=4 --generate_all_jobs_at_once --follow --additional_parameter="--model=TPE" --testname="$TESTNAME" --gpus=$NUM_GPUS

exit_code=$?

if [[ $exit_code -ne 0 ]]; then
	red_text "TPE run failed with exit code $exit_code. Test failed."
	exit 1
fi

if [[ ! -e $csv_path ]]; then
	red_text "$csv_path could not be found."
	exit 2
fi

if [[ $(wc -l $csv_path | sed -e 's#\s.*##') -ne 7 ]]; then
	red_text "$csv_path does not contain 7 lines of results:"
	cat "$csv_path"
	exit 3
fi

if ! cat $csv_path | tail -n1 | grep -q TPE; then
	red_text "$csv_path: The last line does not contain TPE"
	cat "$csv_path"
	exit 4
fi

green_text "TPE test OK"

exit 0
