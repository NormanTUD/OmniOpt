#!/bin/bash

function echoerr() {
        echo "$@" 1>&2
}

function yellow_text {
        echoerr -e "\e\033[0;33m$1\e[0m"
}

function red_text {
        echoerr -e "\e[31m$1\e[0m"
}

function green_text {
        echoerr -e "\e\033[0;32m$1\e[0m"
}

function _help {
	exit_code=$?

	echo ".tests/linters"
	echo "--quick                                  Disable slow tests"
	echo "--help                                   This help"

	exit $exit_code
}

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

cd $SCRIPT_DIR

cd ..

args=("$@")
k=0
quick=0

while [ $k -lt ${#args[@]} ]; do
	i="${args[k]}"

	case $i in
		--quick)
			quick=1
			;;
		--help)
			_help 0
			;;
		*)
			red_text "Unknown parameter $i"
			exit 2
			;;
	esac
	k=$((k+1))
done

source .shellscript_functions

export DONT_INSTALL_MODULES=1
export DONT_SHOW_DONT_INSTALL_MESSAGE=1

errors=()

if [[ "$quick" -eq 0 ]]; then
	yellow_text "Trying pylint..."
	.tests/pylint || {
		red_text "pylint failed"
		errors+=("pylint failed")
	}

	yellow_text "Trying bandit..."
	.tests/bandit || {
		red_text "bandit failed"
		errors+=("bandit failed")
	}

	yellow_text "Trying deadcode..."
	.tests/deadcode || {
		red_text "deadcode failed"
		errors+=("deadcode failed")
	}
fi

yellow_text "Trying pyflakes..."
.tests/pyflakes || {
	red_text "pyflakes failed"
	errors+=("pyflakes failed")
}


yellow_text "Trying flake8..."
.tests/flake8 || {
	red_text "flake8 failed"
	errors+=("flake8 failed")
}

yellow_text "Trying shellcheck..."
.tests/shellcheck || {
	red_text "shellcheck failed"
	errors+=("shellcheck failed")
}

secs=$SECONDS
hrs=$(( secs/3600 )); mins=$(( (secs-hrs*3600)/60 )); secs=$(( secs-hrs*3600-mins*60 ))
printf 'Linters test took: %02d:%02d:%02d\n' $hrs $mins $secs

if [ ${#errors[@]} -eq 0 ]; then
	green_text "No linters errors"
	exit 0
else
	red_text "=> LINTERS-ERRORS => LINTERS-ERRORS => LINTERS-ERRORS =>\n"
	for i in "${errors[@]}"; do
		red_text "$i"
	done

	exit ${#errors[@]}
fi
