#!/bin/bash

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

cd $SCRIPT_DIR

cd ..

cd .gui

function echoerr() {
        echo "$@" 1>&2
}

function yellow_text {
        echoerr -e "\e\033[0;33m$1\e[0m"
}

function red_text {
        echoerr -e "\e[31m$1\e[0m"
}

function green_text {
        echoerr -e "\e\033[0;32m$1\e[0m"
}

ERRORS=()

if command -v php 2>/dev/null >/dev/null; then
	php_no_regex=$(php search.php)
	expected_no_regex="{\"error\":\"No 'regex' parameter given for search\"}"

	if [[ "$php_no_regex" == $expected_no_regex ]]; then
		green_text "php .gui/search.php without regex succeeded"
	else
		error_msg="php .gui/search 'No regex given' failed. Got: >$php_no_regex<, expected: $expected_no_regex"
		red_text "$error_msg"
		ERRORS+=("$error_msg")
	fi

	export regex="IWILLNEVERFINDANYTHINGHOPEFULLY"
	php_no_result=$(php search.php)
	unset regex
	expected_no_result="[]"

	if [[ "$php_no_result" == $expected_no_result ]]; then
		green_text "php .gui/search.php without result succeeded"
	else
		error_msg="php .gui/search 'without result' failed. Got: >$php_no_result<, expected: $expected_no_result"
		red_text "$error_msg"
		ERRORS+=("$error_msg")
	fi

	jq=""
	if command -v jq 2>/dev/null >/dev/null; then
		jq="jq"
	else
		jq_path="../.tools/jq_$(uname -m)"

		if [[ -e $jq_path ]]; then
			jq=$jq_path
		else
			red_text "Neither is jq installed, nor can the file $jq_path be found. Will skip the simple regex test"
		fi
	fi

	if [[ $jq != "" ]]; then
		export regex="a"
		php_result=$(php search.php | $jq 2>/dev/null >/dev/null)
		exit_code=$?
		unset regex

		if [[ $exit_code -eq 0 ]]; then
			green_text "php .gui/search.php simple regex succeeded"
		else
			error_msg="php .gui/search 'simple regex' failed. Got: >$php_result<, expected: $expected_no_result"
			red_text "$error_msg"
			ERRORS+=("$error_msg")
		fi
	else
		red_text "jq not intalled!"
	fi

	if [ ${#ERRORS[@]} -eq 0 ]; then
		green_text "No errors"
	else
		red_text "=> ERRORS => ERRORS => ERRORS =>"
		for i in "${ERRORS[@]}"; do
			red_text "$i"
			echo ""
		done
	fi
else
	yellow_text "Cannot run php_search-test when PHP is not installed!"
	exit 255
fi

exit ${#ERRORS[@]}
