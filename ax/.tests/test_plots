#!/bin/bash

export NO_WHIPTAIL=1

errors=()

function join_by {
	local d=${1-} f=${2-}
	if shift 2; then
		printf %s "$f" "${@/#/$d}"
	fi
}

function echoerr() {
        echo "$@" 1>&2
}

function yellow_text {
        echoerr -e "\e\033[0;33m$1\e[0m"
}

function red_text {
        echoerr -e "\e[31m$1\e[0m"
}

function green_text {
        echoerr -e "\e\033[0;32m$1\e[0m"
}

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

cd $SCRIPT_DIR

cd ..


export PRINT_SEPERATOR=1

expected_plot_types=()

for possible_plot_type in $(ls .omniopt_plot_*.py | sed -e 's#\.py##' -e 's#.*_plot_##'); do
	expected_plot_types+=("$possible_plot_type")
done

test_projects=("one_param" "two_params" "three_params")

projectdir=".tests/plot_example_runs"
projectnumber=0

for projectname in "${test_projects[@]}"; do
	run_dir="$projectdir/$projectname/$projectnumber"

	if [[ ! -d "$run_dir" ]]; then
		red_text "$run_dir could not be found"
		errors+=("$run_dir could not be found")
	else
		for possible_plot_type in "${expected_plot_types[@]}"; do
			if grep add_argument .omniopt_plot_${possible_plot_type}.py | grep save_to_file | grep -v useless 2>&1 >/dev/null; then
				expected_files=()
				for expected_file in $(cat .omniopt_plot_${possible_plot_type}.py | grep "# EXPECTED FILES" | sed -e 's/# EXPECTED FILES: //'); do
					expected_files+=("$expected_file")
				done

				ALL_FILES_THERE=1
				accepts_min_max_string=""
				missing_files=()

				for expected_file in "${expected_files[@]}"; do
					if [[ $(ls $run_dir | grep "$expected_file" | wc -l 2>/dev/null) -lt 1 ]]; then
						ALL_FILES_THERE=0
						missing_files+=("$run_dir/$expected_file")
					fi
				done

				if [[ $ALL_FILES_THERE -eq 1 ]]; then
					trap '' ERR
					num_not_disabled_min_param=$(grep args.min .omniopt_plot_${possible_plot_type}.py | wc -l)

					if [[ "$num_not_disabled_min_param" -ne "0" ]]; then
						accepts_min_max_string=", honours min/max"
					fi
				fi

				this_img="${projectname}_${projectnumber}_image_${possible_plot_type}.svg"

				if [[ $ALL_FILES_THERE -ne 0 ]]; then
					echo "bash omniopt_plot --run_dir $run_dir --save_to_file=$this_img --plot_type=$possible_plot_type"
					bash omniopt_plot --run_dir $run_dir --save_to_file=$this_img --plot_type=$possible_plot_type

					if [[ -e "$this_img" ]]; then
						if [[ $(cat "$this_img" | grep svg | wc -l 2>/dev/null) -lt 2 ]]; then
							red_text "$this_img does not have enough <svg> tags"
							errors+=("$this_img does not have enough <svg> tags")
						else
							green_text "Test OK"
							rm "$this_img"

						fi
					else
						red_text "$this_img does not exist"
						errors+=("$this_img does not exist")
					fi
					echo "<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"
				else
					missing_files_str=$(join_by "," $missing_files)
					errors+=("Not all required files are there to test the $possible_plot_type function, missing files: $missing_files_str")
				fi
			else
				echo "save to file is not possible for $possible_plot_type"
			fi
		done
	fi
done

if [ ${#errors[@]} -eq 0 ]; then
	green_text "No errors"
	exit 0
else
	red_text "=> ERRORS => ERRORS => ERRORS =>"
	for i in "${errors[@]}"; do
		red_text "$i"
	done

	exit ${#errors[@]}
fi
