#!/bin/bash

function echoerr() {
        echo "$@" 1>&2
}

function yellow_text {
        echoerr -e "\e\033[0;33m$1\e[0m"
}

function red_text {
        echoerr -e "\e[31m$1\e[0m"
}

function green_text {
        echoerr -e "\e\033[0;32m$1\e[0m"
}

run_dir=$1
random_phase=$2
systematic_phase=$3

if [[ ! -d $run_dir ]]; then
	red_text "$run_dir not found"
	exit 1
fi

if [[ ! -e "$run_dir/results.csv" ]]; then
	red_text "$run_dir/results.csv not found"
	exit 2
fi

NR_RANDOM=$(cat $run_dir/results.csv | grep -v "trial_index,arm_name" | grep -i sobol | wc -l)
NR_NONRANDOM=$(cat $run_dir/results.csv | grep -v "trial_index,arm_name" | grep -iv sobol | wc -l)

echo "Random steps: $NR_RANDOM"
echo "Nonrandom steps: $NR_NONRANDOM"

errors=()

if [[ $NR_RANDOM -ne $random_phase ]]; then
	errors+=("Number of random steps is wrong, should be $random_phase, is $NR_RANDOM")
fi

if [[ $NR_NONRANDOM -ne $systematic_phase ]]; then
	errors+=("Number of random steps is wrong, should be $systematic_phase, is $NR_NONRANDOM")
fi

secs=$SECONDS
hrs=$(( secs/3600 )); mins=$(( (secs-hrs*3600)/60 )); secs=$(( secs-hrs*3600-mins*60 ))
printf 'help_page test took: %02d:%02d:%02d\n' $hrs $mins $secs

if [ ${#errors[@]} -eq 0 ]; then
	green_text "No help page errors"
	exit 0
else
	red_text "=> PLOT-ERRORS => PLOT-ERRORS => PLOT-ERRORS =>"
	for i in "${errors[@]}"; do
		red_text "$i"
	done

	exit ${#errors[@]}
fi
