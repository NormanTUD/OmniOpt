#!/bin/bash

echo "main-PID: $$"

#SBATCH --signal=B:USR1@120

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

if [ -n "${SLURM_JOB_ID:-}" ] ; then
	SLURM_FILE_SCRIPT_DIR=$(scontrol show job "$SLURM_JOB_ID" | awk -F= '/Command=/{print $2}')
	SLURM_FILE_SCRIPT_DIR=$(dirname $SLURM_FILE_SCRIPT_DIR)

	if [[ -d $SLURM_FILE_SCRIPT_DIR ]]; then
		SCRIPT_DIR="$SLURM_FILE_SCRIPT_DIR"
	else
		echo "SLURM_FILE_SCRIPT_DIR $SLURM_FILE_SCRIPT_DIR not found, even though SLURM_JOB_ID exists ($SLURM_JOB_ID). Using SCRIPT_DIR=$SCRIPT_DIR"
	fi
fi

cd $SCRIPT_DIR

for sig in {1..64}; do
	# Ignoriere Signal 17 (SIGCHLD)
	if [ "$sig" != "17" ]; then
		trap 'kill -USR1 "$python_pid"' $sig
	fi
done

signal_handler() {
	# Signalnummer extrahieren
	sig_num=$1
	# Signalnamen extrahieren
	sig_name=$(kill -l $sig_num)

	# Ignoriere Signal 17 (SIGCHLD)
	if [ "$sig_num" != "17" ]; then
		echo "Signal $sig_num ($sig_name) erhalten."
		#trap 'kill -USR1 "$python_pid"' STOP
		kill -USR1 "$python_pid" &>/dev/null
		exit
	fi
}

cleanup() {
	if [[ ! -z $python_pid ]]; then
		kill -USR1 "$python_pid" &>/dev/null
		exit 0
	else
		echo "Python pid not found. Cannot clean up"
	fi
}

trap cleanup EXIT

source .shellscript_functions

for i in $(env | egrep "^SLURM" | sed -e 's#\s*=.*##' | grep -v SLURM_JOB_ID); do
	unset $i
done

python3 .main.py $* &
python_pid=$!

wait "$python_pid"
